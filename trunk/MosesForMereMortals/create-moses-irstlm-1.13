#!/bin/bash
# create-moses-irstlm
# copyright 2009, JoÃ£o L. A. C. Rosas
# date: 22/11/2009
# version 1.13
# licenced under the GPL, version 3, licence
# this script is based on instructions from several different sources, especially the http://www.dlsi.ua.es/~mlf/fosmt-moses.html web page and the Moses manual (http://www.statmt.org/moses/manual/manual.pdf), as well as on research on the available literature on Moses
# special thanks to H. Leal Fontes, who helped to test the script and made very helpful suggestions
#--------------------------------------------------------------------------------------------------------------------------
# The values of the variables that follow should be filled according to your needs:
#--------------------------------------------------------------------------------------------------------------------------
#Number of processors in your computer
numprocessors=1
#full path of the base directory location of your Moses system 
mosesdir=$HOME/moses-irstlm
#Install GIZA: 1 = Install; Any other value = Do not install
giza=1
#Install IRSTLM: 1 = Install; Any other value = Do not install
irstlm=1
#Install Moses: 1 = Install; Any other value = Do not install (!!! do not try to install before the GIZA and IRSTLM are installed !!!)
moses=1
#Install Moses scripts: 1 = Install; Any other value = Do not install (!!! besides the moses scripts,  a file for scroring and a nonbreaking_prefix file for the portuguese language will be installed !!!)
mosesscripts=1
#Install small demo corpus: 1 = Install; Any other value = Do not install (!!! this is a very small corpus that can be used just to see what the scripts do; do not use it if you want to know the quality of Moses translations !!!)
democorpus=1
#Do a sanity check of the Moses installation: 1 = Install; Any other value = Do not install
domosestest=1

#--------------------------------------------------------------------------------------------------------------------------
#end of parameters that you should fill
#--------------------------------------------------------------------------------------------------------------------------


#--------------------------------------------------------------------------------------------------------------------------
# DON'T CHANGE THE LINES THAT FOLLOW ... unless you know what you are doing!
#--------------------------------------------------------------------------------------------------------------------------
#full path of the directory where the files created while processing a corpus will be placed
workdir=$mosesdir/work
#full path of the directory where you placed the tools
toolsdir=$mosesdir/tools

#create, if need be, some important directories
if [ -d $mosesdir ]; then
	: #do nothing
else
	mkdir $mosesdir
fi

if [ -d $mosesdir/corpora_for_training ]; then
	: #do nothing
else
	mkdir $mosesdir/corpora_for_training
fi

if [ -d $mosesdir/corpora_trained ]; then
	: #do nothing
else
	mkdir $mosesdir/corpora_trained
fi

if [ -d $toolsdir ]; then
	: #do nothing
else
	mkdir $toolsdir
fi

cd $toolsdir

#Create file that informs about components already installed
if [ ! -f $toolsdir/create.moses.irstlm.log ]; then
	echo "did_giza=" > $toolsdir/create.moses.irstlm.log
	echo "did_irstlm=" >> $toolsdir/create.moses.irstlm.log
	echo "did_moses=" >> $toolsdir/create.moses.irstlm.log
	echo "did_mosesscripts=" >> $toolsdir/create.moses.irstlm.log
	echo "did_democorpus=" >> $toolsdir/create.moses.irstlm.log
	echo "did_domosestest=" >> $toolsdir/create.moses.irstlm.log
fi

# Install GIZA++
if [ "$giza" = "1" ]; then
	. create.moses.irstlm.log
	if [ "$did_giza" != "1" ]; then
		if [ -d $toolsdir/giza-pp ]; then
			rm -rf $toolsdir/giza-pp
		fi
		svn checkout http://giza-pp.googlecode.com/svn/trunk/ giza-pp
		#wget http://giza-pp.googlecode.com/files/giza-pp-v1.0.3.tar.gz
		#tar -xzvf giza-pp-v1.0.3.tar.gz
		if [ -d $toolsdir/giza-pp ]; then
			cd $toolsdir/giza-pp
			sed -e "s#char time_stmp\[17\]#char time_stmp\[37\]#g" -e "s#\%02d\-\%02d\-\%02d#\%04d\-\%02d\-\%02d#g" -e 's#local->tm_year#1900 + local->tm_year#g' $toolsdir/giza-pp/GIZA++-v2/file_spec.h > $toolsdir/giza-pp/GIZA++-v2/file_spec.h.new
			mv $toolsdir/giza-pp/GIZA++-v2/file_spec.h.new $toolsdir/giza-pp/GIZA++-v2/file_spec.h
			make
			cd $toolsdir/
			#rm giza-pp-v1.0.3.tar.gz

			mkdir $toolsdir/bin

			cp $toolsdir/giza-pp/GIZA++-v2/GIZA++ $toolsdir/bin/
			cp $toolsdir/giza-pp/mkcls-v2/mkcls $toolsdir/bin/
			cp $toolsdir/giza-pp/GIZA++-v2/snt2cooc.out $toolsdir/bin/
			cp $toolsdir/giza-pp/GIZA++-v2/snt2plain.out $toolsdir/bin/
			cp $toolsdir/giza-pp/GIZA++-v2/plain2snt.out $toolsdir/bin/
		fi

		if [ ! -f $toolsdir/bin/snt2plain.out ]; then
			echo "GIZA not correctly installed. The script will now exit."
			sed -ie 's/^did_giza=.*$/did_giza=0/g' $toolsdir/create.moses.irstlm.log
			exit 0
		else
			sed -ie 's/^did_giza=.*$/did_giza=1/g' $toolsdir/create.moses.irstlm.log
		fi
	else
		echo "GIZA already correctly installed. Reusing it."
	fi
	fi

#Install IRSTLM
if [ "$irstlm" = "1" ]; then
	cd $toolsdir
	. create.moses.irstlm.log
	if [ "$did_irstlm" != "1" ]; then
		if [ -d $toolsdir/irstlm ]; then
			rm -rf $toolsdir/irstlm
		fi
		svn co https://irstlm.svn.sourceforge.net/svnroot/irstlm irstlm
		#wget http://downloads.sourceforge.net/project/irstlm/irstlm/irstlm-5.22.01/irstlm-5.22.01.tar.gz?use_mirror=surfnet
		#tar -xzvf irstlm-5.22.01.tar.gz
		#mv -f irstlm-5.22.01 irstlm
		if [ -d $toolsdir/irstlm ]; then
			cd $toolsdir/irstlm
			./regenerate-makefiles.sh
			./configure --prefix=$toolsdir/irstlm
			make
			make install
		fi

		if [ ! -f $toolsdir/irstlm/bin/i686/quantize-lm ]; then
			echo "IRSTLM not correctly installed. Script will now exit."
			sed -ie 's/^did_irstlm=.*$/did_irstlm=0/g' $toolsdir/create.moses.irstlm.log
			exit 0
		else
			cd $toolsdir
			sed -ie 's/^did_irstlm=.*$/did_irstlm=1/g' $toolsdir/create.moses.irstlm.log
			export PATH=$toolsdir/irstlm/bin/i686:$toolsdir/irstlm/bin:$PATH
		fi
	else
		echo "IRSTLM already correctly installed. Reusing it."
	fi
fi


#Install Moses
if [ "$moses" = "1" ]; then
	cd $toolsdir
	. create.moses.irstlm.log
	if [ "$did_moses" != "1" ]; then
		if [ -d $toolsdir/moses ]; then
			rm -rf $toolsdir/moses
			mkdir $toolsdir/moses
		fi

		svn co https://mosesdecoder.svn.sourceforge.net/svnroot/mosesdecoder/trunk moses
		cd $toolsdir/moses
		./regenerate-makefiles.sh
		./configure --with-irstlm=$toolsdir/irstlm 
		make -j $numprocessors

		cd $toolsdir/moses/scripts
		sed -e 's#^TARGETDIR=.*$#TARGETDIR='"$toolsdir"'/moses#g' -e 's#^BINDIR=.*$#BINDIR='"$toolsdir"'/bin#g' $toolsdir/moses/scripts/Makefile > $toolsdir/moses/scripts/Makefile.new
		mv $toolsdir/moses/scripts/Makefile.new $toolsdir/moses/scripts/Makefile
		chmod +x $toolsdir/moses/scripts/Makefile
		make release
		rm -rf $toolsdir/moses/scripts

		if [ ! -f $toolsdir/moses/moses-cmd/src/moses ]; then
			echo "Moses wasn't correctly installed. Script will now exit."
			sed -ie 's/^did_moses=.*$/did_moses=0/g' $toolsdir/create.moses.irstlm.log
			exit 0
		else
			export SCRIPTS_ROOTDIR=$HOME/tools/moses/script*
			sed -ie 's/^did_moses=.*$/did_moses=1/g' $toolsdir/create.moses.irstlm.log
		fi
	else
		echo "Moses already correctly installed. Reusing it."
	fi
fi

#Install Moses scripts
if [ "$mosesscripts" = "1" ]; then
	cd $toolsdir
	. create.moses.irstlm.log
	if [ "$did_mosesscripts" != "1" ]; then
		if [ -d $toolsdir/scripts ]; then
			rm -rf $toolsdir/scripts
			mkdir $toolsdir/scripts
		fi
		wget http://homepages.inf.ed.ac.uk/jschroe1/how-to/scripts.tgz
		tar -xzvf scripts.tgz
		rm scripts.tgz

		cd $toolsdir/scripts/nonbreaking_prefixes
		wget http://moses-for-mere-mortals.googlecode.com/files/nonbreaking_prefix.pt

		cd $toolsdir
		wget ftp://jaguar.ncsl.nist.gov/mt/resources/mteval-v11b.pl
		chmod +x mteval-v11b.pl

		if [ ! -f $toolsdir/scripts/tokenizer.perl -o ! -f $toolsdir/scripts/nonbreaking_prefixes/nonbreaking_prefix.pt -o ! -f $toolsdir/mteval-v11b.pl ]; then
			echo "Moses scripts weren't correctly copied. Script will now exit."
			sed -ie 's/^did_mosesscripts=.*$/did_mosesscripts=0/g' $toolsdir/create.moses.irstlm.log
			exit 0
		else
			sed -ie 's/^did_mosesscripts=.*$/did_mosesscripts=1/g' $toolsdir/create.moses.irstlm.log
		fi
	else
		echo "Moses scripts already correctly installed. Reusing them."
	fi
fi

#Install a small demonstration corpus
if [ "$democorpus" = "1" ]; then
	cd $mosesdir
	. $toolsdir/create.moses.irstlm.log
	if [ "$did_democorpus" != "1" ]; then
		if [ ! -d corpora_for_training ]; then
			mkdir corpora_for_training
		fi
		cd corpora_for_training
		wget http://moses-for-mere-mortals.googlecode.com/files/corpora_for_training.tar.gz
		tar -xzvf corpora_for_training.tar.gz
		rm corpora_for_training.tar.gz
		if [ ! -f $mosesdir/corpora_for_training/1000.en ]; then
			echo "Demo corpus wasn't correctly installed."
			sed -ie 's/^did_democorpus=.*$/did_democorpus=0/g' $toolsdir/create.moses.irstlm.log
			exit 0
		else
			sed -ie 's/^did_democorpus=.*$/did_democorpus=1/g' $toolsdir/create.moses.irstlm.log
		fi
	else
		echo "Demo corpus already correctly installed. Reusing it."
	fi
fi

#Install and execute the Moses sanity check
if [ "$domosestest" = "1" ]; then
	cd $toolsdir
	. create.moses.irstlm.log
	if [ "$did_domosestest" != "1" ]; then
		if [ -d $mosesdir/test ]; then
			rm -rf $mosesdir/test
			mkdir $mosesdir/test
		else
			mkdir $mosesdir/test
		fi
		cd $mosesdir/test
		wget http://www.statmt.org/moses/download/sample-models.tgz
		tar -xzvf sample-models.tgz
		if [ -d $mosesdir/test/sample-models ]; then
			cd $mosesdir/test/sample-models/phrase-model/
			$toolsdir/moses/moses-cmd/src/moses -f moses.ini < in > out
			cd $mosesdir
			sed -ie 's/^did_domosestest=.*$/did_domosestest=1/g' $toolsdir/create.moses.irstlm.log
			rm -r test/
		else
			echo "Moses sanity check wasn't correctly installed."
			sed -ie 's/^did_domosestest=.*$/did_domosestest=0/g' $toolsdir/create.moses.irstlm.log
		fi
	fi
fi
cd $toolsdir
#--------------------------------------------------------------------------------------------------------------------------
#end of moses installation
#--------------------------------------------------------------------------------------------------------------------------

